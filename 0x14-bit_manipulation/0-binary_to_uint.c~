#include "main.h"

unsigned int binary_to_uint(const char *b) {
    if (b == NULL) {
        // Handle case where the input pointer is NULL
        return 0;
    }

    unsigned int result = 0;

    // Iterate through each character in the string
    while (*b != '\0') {
        // Check if the character is '0' or '1'
        if (*b == '0') {
            // Shift the result to the left by 1 position
            result <<= 1;
        } else if (*b == '1') {
            // Shift the result to the left by 1 position and set the rightmost bit to 1
            result = (result << 1) | 1;
        } else {
            // Invalid character encountered, return 0
            return 0;
        }

        // Move to the next character in the string
        b++;
    }

    return result;
}

int main() {
    const char *binary_string = "110101";
    unsigned int result = binary_to_uint(binary_string);

    if (result != 0) {
        printf("Binary: %s\nUnsigned Int: %u\n", binary_string, result);
    } else {
        printf("Invalid binary string\n");
    }

    return 0;
}
